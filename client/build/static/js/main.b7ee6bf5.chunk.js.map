{"version":3,"sources":["context/DataProvider.js","components/header/Header.jsx","components/banner/Banner.jsx","constants/data.js","components/home/Categories.jsx","constants/config.js","utils/common-utils.js","service/api.js","components/home/post/Post.jsx","components/home/post/Posts.jsx","components/home/Home.jsx","components/create/CreatePost.jsx","components/details/comments/Comment.jsx","components/details/comments/Comments.jsx","components/details/DetailView.jsx","components/create/Update.jsx","components/about/About.jsx","components/contact/Contact.jsx","components/account/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["DataContext","createContext","DataProvider","_ref","children","account","setAccount","useState","name","username","_jsx","Provider","value","Component","styled","AppBar","Container","Toolbar","Header","useNavigate","_jsxs","Link","to","Image","Box","Heading","Typography","SubHeading","Banner","categories","id","type","StyledTable","Table","StyledButton","Button","StyledLink","Categories","searchParams","useSearchParams","category","get","_Fragment","style","textDecoration","variant","TableHead","TableRow","TableCell","TableBody","map","API_NOTIFICATION_MESSAGES","loading","title","message","success","requestFailure","responseFailure","networkError","SERVICE_URLS","userLogin","url","method","userSignup","getAllPosts","params","getRefreshToken","uploadFile","createPost","deletePost","query","getPostById","newComment","getAllComments","deleteComment","updatePost","getType","body","_id","axiosInstance","axios","create","baseURL","timeout","headers","interceptors","request","use","config","TYPE","error","Promise","reject","response","processResponse","ProcessError","status","isSuccess","data","isFailure","msg","code","async","_error$response","console","log","toJSON","isError","sessionStorage","clear","API","key","Object","entries","showUploadProgress","showDownloadProgress","responseType","authorization","getItem","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","onDownloadProgress","width","objectFit","borderRadius","height","Text","Details","Post","post","picture","addEllipsis","str","limit","length","substring","src","alt","description","Posts","posts","getPosts","useEffect","fetchData","Grid","item","lg","sm","xs","color","margin","fontSize","Home","container","theme","breakpoints","down","StyledFormControl","FormControl","InputTextField","InputBase","Textarea","TextareaAutosize","initialPost","createdDate","Date","CreatePost","navigate","location","useLocation","setPost","file","setFile","useContext","_location$search","FormData","append","getImage","search","split","handleChange","e","target","htmlFor","Add","display","onChange","files","placeholder","onClick","savePost","rowsMin","Name","StyledDate","DeleteIcon","Delete","Comment","comment","setToggle","date","toDateString","prev","removeComment","comments","StyledTextArea","initialValue","postId","Comments","setComment","setComments","toggle","getData","size","addComment","padding","background","boxShadow","marginBottom","EditIcon","Edit","Author","_ref2","justifyContent","alignItems","flexDirection","gap","Description","DetailView","useParams","textAlign","deleteBlog","fontWeight","Update","imageURL","setImageURL","updateBlogPost","Wrapper","About","component","marginLeft","href","GitHub","Contact","Email","LoginButton","SignupButton","Error","loginInitialValues","password","signupInitialValues","Login","isUserAuthenticated","login","setLogin","signup","setSignup","showError","toggleAccount","onValueChange","onInputChange","toggleSignup","TextField","label","setItem","accessToken","refreshToken","PrivateRoute","isAuthenticated","props","token","Outlet","Navigate","replace","App","BrowserRouter","marginTop","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7ee6bf5.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\n\r\nexport const DataContext = createContext(null);\r\n\r\nconst DataProvider = ({ children }) => {\r\n    const [ account, setAccount ] = useState({ name: '', username: '' });\r\n        \r\n    return (\r\n        <DataContext.Provider value={{ \r\n            account, \r\n            setAccount \r\n        }}>\r\n            {children}\r\n        </DataContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DataProvider;","\r\nimport { AppBar, Toolbar, styled, Button } from '@mui/material'; \r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst Component = styled(AppBar)`\r\n    background: #FFFFFF;\r\n    color: black;\r\n`;\r\n\r\nconst Container = styled(Toolbar)`\r\n    justify-content: center;\r\n    & > a {\r\n        padding: 20px;\r\n        color: #000;\r\n        text-decoration: none;\r\n    }\r\n`\r\n\r\nconst Header = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const logout = async () => navigate('/account');\r\n        \r\n    return (\r\n        <Component>\r\n            <Container>\r\n                <Link to='/'>HOME</Link>\r\n                <Link to='/about'>ABOUT</Link>\r\n                <Link to='/contact'>CONTACT</Link>\r\n                <Link to='/account'>LOGOUT</Link>\r\n            </Container>\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Header;","\r\nimport { styled, Box, Typography } from '@mui/material';\r\n\r\nconst Image = styled(Box)`\r\n    width: 100%;\r\n    background: url(https://images.pexels.com/photos/1714208/pexels-photo-1714208.jpeg) center/55% repeat-x #000;\r\n    height: 50vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Heading = styled(Typography)`\r\n    font-size: 70px;\r\n    color: #FFFFFF;\r\n    line-height: 1\r\n`;\r\n\r\nconst SubHeading = styled(Typography)`\r\n    font-size: 20px;\r\n    background: #FFFFFF;\r\n`;\r\n\r\nconst Banner = () => {\r\n    \r\n    return (\r\n        <Image>\r\n            <Heading>BLOG</Heading>\r\n            <SubHeading>Code for Interview</SubHeading>\r\n        </Image>\r\n    )\r\n}\r\n\r\nexport default Banner;","export const categories = [\r\n    { id: 1, type: \"Music\" },\r\n    { id: 2, type: \"Movies\" },\r\n    { id: 3, type: \"Sports\" },\r\n    { id: 4, type: \"Tech\" },\r\n    { id: 5, type: \"Fashion\" }\r\n];\r\n","\r\nimport { Button, Table, TableHead, TableRow, TableCell, TableBody, styled } from '@mui/material';\r\nimport { Link, useSearchParams } from 'react-router-dom';\r\n\r\nimport { categories } from '../../constants/data';\r\n\r\nconst StyledTable = styled(Table)`\r\n    border: 1px solid rgba(224, 224, 224, 1);\r\n`;\r\n    \r\nconst StyledButton = styled(Button)`\r\n    margin: 20px;\r\n    width: 85%;\r\n    background: #6495ED;\r\n    color: #fff;\r\n    text-decoration: none;\r\n`;\r\n    \r\nconst StyledLink = styled(Link)`\r\n    text-decoration: none;\r\n    color: inherit;\r\n`;\r\n\r\nconst Categories = () => {\r\n    const [searchParams] = useSearchParams();\r\n    const category = searchParams.get('category');\r\n    \r\n    return (\r\n        <>\r\n            <Link to={`/create?category=${category || ''}`} style={{ textDecoration: 'none' }}>\r\n                <StyledButton variant=\"contained\">Create Blog</StyledButton>\r\n            </Link>\r\n            \r\n            <StyledTable>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            <StyledLink to={\"/\"}>\r\n                                All Categories\r\n                            </StyledLink>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        categories.map(category => (\r\n                            <TableRow key={category.id}>\r\n                                <TableCell>\r\n                                    <StyledLink to={`/?category=${category.type}`}>\r\n                                        {category.type}\r\n                                    </StyledLink>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))\r\n                    }\r\n                </TableBody>\r\n            </StyledTable>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Categories;","// API NOTIFICATION MESSAGES\r\nexport const API_NOTIFICATION_MESSAGES = {\r\n    loading: {\r\n        title: \"Loading...\",\r\n        message: \"Data is being loaded. Please wait\"\r\n    },\r\n    success: {\r\n        title: \"Success\",\r\n        message: \"Data successfully loaded\"\r\n    },\r\n    requestFailure: {\r\n        title: \"Error!\",\r\n        message: \"An error occur while parsing request data\"\r\n    },\r\n    responseFailure: {\r\n        title: \"Error!\",\r\n        message: \"An error occur while fetching response from server. Please try again\"\r\n    },\r\n    networkError: {\r\n        title: \"Error!\",\r\n        message: \"Unable to connect to the server. Please check internet connectivity and try again.\"\r\n    }\r\n}\r\n\r\n// API SERVICE URL\r\n// SAMPLE REQUEST\r\n// NEED SERVICE CALL: { url: \"/\", method: \"POST/GET/PUT/DELETE\" }\r\nexport const SERVICE_URLS = {\r\n    userLogin: { url: '/login', method: 'POST' },\r\n    userSignup: { url: '/signup', method: 'POST' },\r\n    getAllPosts: { url: '/posts', method: 'GET', params: true },\r\n    getRefreshToken: { url: '/token', method: 'POST' },\r\n    uploadFile: { url: 'file/upload', method: 'POST' },\r\n    createPost: { url: 'create', method: 'POST' },\r\n    deletePost: { url: 'delete', method: 'DELETE', query: true },\r\n    getPostById: { url: 'post', method: 'GET', query: true },\r\n    newComment: { url: '/comment/new', method: 'POST' },\r\n    getAllComments: { url: 'comments', method: 'GET', query: true },\r\n    deleteComment: { url: 'comment/delete', method: 'DELETE', query: true },\r\n    updatePost: { url: 'update', method: 'PUT', query: true }\r\n}","\r\n\r\nexport const getAccessToken = () => {\r\n    return sessionStorage.getItem('accessToken');\r\n}\r\n\r\nexport const getRefreshToken = () => {\r\n    return sessionStorage.getItem('refreshToken');\r\n}\r\n\r\nexport const setAccessToken = (accessToken) => {\r\n    sessionStorage.setItem('accessToken', `Bearer ${accessToken}`);\r\n}\r\n\r\nexport const setRefreshToken = (refreshToken) => {\r\n    sessionStorage.setItem('refreshToken', `Bearer ${refreshToken}`);\r\n}\r\n\r\nexport const getType = (value, body) => {\r\n    if (value.params) {\r\n        return { params: body }\r\n    } else if (value.query) {\r\n        if (typeof body === 'object') {\r\n            return { query: body._id }\r\n        } else {\r\n            return { query: body }\r\n        }\r\n    }\r\n    return {};\r\n}","import axios from \"axios\";\r\n\r\nimport { API_NOTIFICATION_MESSAGES, SERVICE_URLS } from \"../constants/config\";\r\nimport {\r\n  getAccessToken,\r\n  getRefreshToken,\r\n  setAccessToken,\r\n  getType,\r\n} from \"../utils/common-utils\";\r\n\r\nconst API_URL = \"https://blogproject-pearl.vercel.app\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    \"content-type\": \"application/json\",\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  function (config) {\r\n    if (config.TYPE.params) {\r\n      config.params = config.TYPE.params;\r\n    } else if (config.TYPE.query) {\r\n      config.url = config.url + \"/\" + config.TYPE.query;\r\n    }\r\n    return config;\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  function (response) {\r\n    // Stop global loader here\r\n    return processResponse(response);\r\n  },\r\n  function (error) {\r\n    // Stop global loader here\r\n    return Promise.reject(ProcessError(error));\r\n  }\r\n);\r\n\r\n///////////////////////////////\r\n// If success -> returns { isSuccess: true, data: object }\r\n// If fail -> returns { isFailure: true, status: string, msg: string, code: int }\r\n//////////////////////////////\r\nconst processResponse = (response) => {\r\n  if (response?.status === 200) {\r\n    return { isSuccess: true, data: response.data };\r\n  } else {\r\n    return {\r\n      isFailure: true,\r\n      status: response?.status,\r\n      msg: response?.msg,\r\n      code: response?.code,\r\n    };\r\n  }\r\n};\r\n\r\n///////////////////////////////\r\n// If success -> returns { isSuccess: true, data: object }\r\n// If fail -> returns { isError: true, status: string, msg: string, code: int }\r\n//////////////////////////////\r\nconst ProcessError = async (error) => {\r\n  if (error.response) {\r\n    // Request made and server responded with a status code\r\n    // that falls out of the range of 2xx\r\n    if (error.response?.status === 403) {\r\n      // const { url, config } = error.response;\r\n      // console.log(error);\r\n      // try {\r\n      //     let response = await API.getRefreshToken({ token: getRefreshToken() });\r\n      //     if (response.isSuccess) {\r\n      sessionStorage.clear();\r\n      //         setAccessToken(response.data.accessToken);\r\n\r\n      //         const requestData = error.toJSON();\r\n\r\n      //         let response1 = await axios({\r\n      //             method: requestData.config.method,\r\n      //             url: requestData.config.baseURL + requestData.config.url,\r\n      //             headers: { \"content-type\": \"application/json\", \"authorization\": getAccessToken() },\r\n      //             params: requestData.config.params\r\n      //         });\r\n      //     }\r\n      // } catch (error) {\r\n      //     return Promise.reject(error)\r\n      // }\r\n    } else {\r\n      console.log(\"ERROR IN RESPONSE: \", error.toJSON());\r\n      return {\r\n        isError: true,\r\n        msg: API_NOTIFICATION_MESSAGES.responseFailure,\r\n        code: error.response.status,\r\n      };\r\n    }\r\n  } else if (error.request) {\r\n    // The request was made but no response was received\r\n    console.log(\"ERROR IN RESPONSE: \", error.toJSON());\r\n    return {\r\n      isError: true,\r\n      msg: API_NOTIFICATION_MESSAGES.requestFailure,\r\n      code: \"\",\r\n    };\r\n  } else {\r\n    // Something happened in setting up the request that triggered an Error\r\n    console.log(\"ERROR IN RESPONSE: \", error.toJSON());\r\n    return {\r\n      isError: true,\r\n      msg: API_NOTIFICATION_MESSAGES.networkError,\r\n      code: \"\",\r\n    };\r\n  }\r\n};\r\n\r\nconst API = {};\r\n\r\nfor (const [key, value] of Object.entries(SERVICE_URLS)) {\r\n  API[key] = (body, showUploadProgress, showDownloadProgress) =>\r\n    axiosInstance({\r\n      method: value.method,\r\n      url: value.url,\r\n      data: value.method === \"DELETE\" ? \"\" : body,\r\n      responseType: value.responseType,\r\n      headers: {\r\n        authorization: getAccessToken(),\r\n      },\r\n      TYPE: getType(value, body),\r\n      onUploadProgress: function (progressEvent) {\r\n        if (showUploadProgress) {\r\n          let percentCompleted = Math.round(\r\n            (progressEvent.loaded * 100) / progressEvent.total\r\n          );\r\n          showUploadProgress(percentCompleted);\r\n        }\r\n      },\r\n      onDownloadProgress: function (progressEvent) {\r\n        if (showDownloadProgress) {\r\n          let percentCompleted = Math.round(\r\n            (progressEvent.loaded * 100) / progressEvent.total\r\n          );\r\n          showDownloadProgress(percentCompleted);\r\n        }\r\n      },\r\n    });\r\n}\r\n\r\nexport { API };\r\n","\r\nimport { styled, Box, Typography } from '@mui/material';\r\n\r\nconst Container = styled(Box)`\r\n    border: 1px solid #d3cede;\r\n    border-radius: 10px;\r\n    margin: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    height: 350px;\r\n    & > img, & > p {\r\n        padding: 0 5px 5px 5px;\r\n    }\r\n`;\r\n\r\nconst Image = styled('img')({\r\n    width: '100%',\r\n    objectFit: 'cover',\r\n    borderRadius: '10px 10px 0 0',\r\n    height: 150\r\n});\r\n\r\nconst Text = styled(Typography)`\r\n    color: #878787\r\n    font-size: 12px;\r\n`;\r\n\r\nconst Heading = styled(Typography)`\r\n    font-size: 18px;\r\n    font-weight: 600\r\n`;\r\n\r\nconst Details = styled(Typography)`\r\n    font-size: 14px;\r\n    word-break: break-word;\r\n`;\r\n\r\nconst Post = ({ post }) => {\r\n    const url = post.picture ? post.picture : 'https://images.unsplash.com/photo-1498050108023-c5249f4df085?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=752&q=80';\r\n    \r\n    const addEllipsis = (str, limit) => {\r\n        return str.length > limit ? str.substring(0, limit) + '...' : str;\r\n    } \r\n\r\n    return (\r\n        <Container>\r\n            <Image src={url} alt=\"post\" />\r\n            <Text>{post.categories}</Text>\r\n            <Heading>{addEllipsis(post.title, 20)}</Heading>\r\n            <Text>Author: {post.username}</Text>\r\n            <Details>{addEllipsis(post.description, 100)}</Details>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Post;","import { useEffect, useState } from 'react';\r\n\r\nimport { Grid, Box } from '@mui/material';\r\nimport { Link, useSearchParams } from 'react-router-dom';\r\n\r\n// import { getAllPosts } from '../../../service/api';\r\nimport { API } from '../../../service/api';\r\n\r\n//components\r\nimport Post from './Post';\r\n\r\nconst Posts = () => {\r\n    const [posts, getPosts] = useState([]);\r\n    \r\n    const [searchParams] = useSearchParams();\r\n    const category = searchParams.get('category');\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => { \r\n            let response = await API.getAllPosts({ category : category || '' });\r\n            if (response.isSuccess) {\r\n                getPosts(response.data);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [category]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                posts?.length ? posts.map(post => (\r\n                    <Grid item lg={3} sm={4} xs={12}>\r\n                        <Link style={{textDecoration: 'none', color: 'inherit'}} to={`details/${post._id}`}>\r\n                            <Post post={post} />\r\n                        </Link>\r\n                    </Grid>\r\n                )) : <Box style={{color: '878787', margin: '30px 80px', fontSize: 18}}>\r\n                        No data is available for selected category\r\n                    </Box>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Posts;","\r\nimport { Grid } from '@mui/material';\r\n\r\n//components\r\nimport Banner from '../banner/Banner';\r\nimport Categories from './Categories';\r\nimport Posts from './post/Posts';\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <>\r\n            <Banner />\r\n            <Grid container>\r\n                <Grid item lg={2} xs={12} sm={2}>\r\n                    <Categories />\r\n                </Grid>\r\n                <Grid container item xs={12} sm={10} lg={10}>\r\n                    <Posts />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport { styled, Box, TextareaAutosize, Button, InputBase, FormControl  } from '@mui/material';\r\nimport { AddCircle as Add } from '@mui/icons-material';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nimport { API } from '../../service/api';\r\nimport { DataContext } from '../../context/DataProvider';\r\n\r\nconst Container = styled(Box)(({ theme }) => ({\r\n    margin: '50px 100px',\r\n    [theme.breakpoints.down('md')]: {\r\n        margin: 0\r\n    }\r\n}));\r\n\r\nconst Image = styled('img')({\r\n    width: '100%',\r\n    height: '50vh',\r\n    objectFit: 'cover'\r\n});\r\n\r\nconst StyledFormControl = styled(FormControl)`\r\n    margin-top: 10px;\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\n\r\nconst InputTextField = styled(InputBase)`\r\n    flex: 1;\r\n    margin: 0 30px;\r\n    font-size: 25px;\r\n`;\r\n\r\nconst Textarea = styled(TextareaAutosize)`\r\n    width: 100%;\r\n    border: none;\r\n    margin-top: 50px;\r\n    font-size: 18px;\r\n    &:focus-visible {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst initialPost = {\r\n    title: '',\r\n    description: '',\r\n    picture: '',\r\n    username: '',\r\n    categories: '',\r\n    createdDate: new Date()\r\n}\r\n\r\nconst CreatePost = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [post, setPost] = useState(initialPost);\r\n    const [file, setFile] = useState('');\r\n    const { account } = useContext(DataContext);\r\n\r\n    const url = post.picture ? post.picture : 'https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80';\r\n    \r\n    useEffect(() => {\r\n        const getImage = async () => { \r\n            if(file) {\r\n                const data = new FormData();\r\n                data.append(\"name\", file.name);\r\n                data.append(\"file\", file);\r\n                \r\n                const response = await API.uploadFile(data);\r\n                post.picture = response.data;\r\n            }\r\n        }\r\n        getImage();\r\n        post.categories = location.search?.split('=')[1] || 'All';\r\n        post.username = account.username;\r\n    }, [file])\r\n\r\n    const savePost = async () => {\r\n        await API.createPost(post);\r\n        navigate('/');\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setPost({ ...post, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Image src={url} alt=\"post\" />\r\n\r\n            <StyledFormControl>\r\n                <label htmlFor=\"fileInput\">\r\n                    <Add fontSize=\"large\" color=\"action\" />\r\n                </label>\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"fileInput\"\r\n                    style={{ display: \"none\" }}\r\n                    onChange={(e) => setFile(e.target.files[0])}\r\n                />\r\n                <InputTextField onChange={(e) => handleChange(e)} name='title' placeholder=\"Title\" />\r\n                <Button onClick={() => savePost()} variant=\"contained\" color=\"primary\">Publish</Button>\r\n            </StyledFormControl>\r\n\r\n            <Textarea\r\n                rowsMin={5}\r\n                placeholder=\"Tell your story...\"\r\n                name='description'\r\n                onChange={(e) => handleChange(e)} \r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CreatePost;","import { useContext } from \"react\";\r\n\r\nimport { Typography, Box, styled } from \"@mui/material\";\r\nimport { Delete } from '@mui/icons-material';\r\n\r\nimport { API } from '../../../service/api';\r\nimport { DataContext } from \"../../../context/DataProvider\";\r\n\r\nconst Component = styled(Box)`\r\n    margin-top: 30px;\r\n    background: #F5F5F5;\r\n    padding: 10px;\r\n`;\r\n\r\nconst Container = styled(Box)`\r\n    display: flex;\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nconst Name = styled(Typography)`\r\n    font-weight: 600,\r\n    font-size: 18px;\r\n    margin-right: 20px;\r\n`;\r\n\r\nconst StyledDate = styled(Typography)`\r\n    font-size: 14px;\r\n    color: #878787;\r\n`;\r\n\r\nconst DeleteIcon = styled(Delete)`\r\n    margin-left: auto;\r\n`;\r\n\r\nconst Comment = ({ comment, setToggle }) => {\r\n\r\n    const { account } = useContext(DataContext)\r\n    \r\n    const removeComment = async () => {\r\n       await API.deleteComment(comment._id);\r\n       setToggle(prev => !prev);\r\n    }\r\n\r\n    return (\r\n        <Component>\r\n            <Container>\r\n                <Name>{comment.name}</Name>\r\n                <StyledDate>{new Date(comment.date).toDateString()}</StyledDate>\r\n                { comment.name === account.username && <DeleteIcon onClick={() => removeComment()} /> }\r\n            </Container>\r\n            <Typography>{comment.comments}</Typography>\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Comment;","import { useState, useEffect, useContext } from 'react';\r\nimport { Box, TextareaAutosize, Button, styled } from '@mui/material';\r\n\r\nimport { DataContext } from '../../../context/DataProvider';\r\n\r\nimport { API } from '../../../service/api';\r\n\r\n//components\r\nimport Comment from './Comment';\r\n\r\nconst Container = styled(Box)`\r\n    margin-top: 100px;\r\n    display: flex;\r\n`;\r\n\r\nconst Image = styled('img')({\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: '50%'\r\n});\r\n\r\nconst StyledTextArea = styled(TextareaAutosize)`\r\n    height: 100px !important;\r\n    width: 100%; \r\n    margin: 0 20px;\r\n`;\r\n\r\nconst initialValue = {\r\n    name: '',\r\n    postId: '',\r\n    date: new Date(),\r\n    comments: ''\r\n}\r\n\r\nconst Comments = ({ post }) => {\r\n    const url = 'https://static.thenounproject.com/png/12017-200.png'\r\n\r\n    const [comment, setComment] = useState(initialValue);\r\n    const [comments, setComments] = useState([]);\r\n    const [toggle, setToggle] = useState(false);\r\n\r\n    const { account } = useContext(DataContext);\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            const response = await API.getAllComments(post._id);\r\n            if (response.isSuccess) {\r\n                setComments(response.data);\r\n            }\r\n        }\r\n        getData();\r\n    }, [toggle, post]);\r\n\r\n    const handleChange = (e) => {\r\n        setComment({\r\n            ...comment,\r\n            name: account.username,\r\n            postId: post._id,\r\n            comments: e.target.value\r\n        });\r\n    }\r\n\r\n    const addComment = async() => {\r\n        await API.newComment(comment);\r\n        setComment(initialValue)\r\n        setToggle(prev => !prev);\r\n    }\r\n    \r\n    return (\r\n        <Box>\r\n            <Container>\r\n                <Image src={url} alt=\"dp\" />   \r\n                <StyledTextArea \r\n                    rowsMin={5} \r\n                    placeholder=\"what's on your mind?\"\r\n                    onChange={(e) => handleChange(e)} \r\n                    value={comment.comments}\r\n                />\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    size=\"medium\" \r\n                    style={{ height: 40 }}\r\n                    onClick={(e) => addComment(e)}\r\n                >Post</Button>             \r\n            </Container>\r\n            <Box>\r\n                {\r\n                    comments && comments.length > 0 && comments.map(comment => (\r\n                        <Comment comment={comment} setToggle={setToggle} />\r\n                    ))\r\n                }\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Comments;","import { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { Box, Typography, styled } from \"@mui/material\";\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport { API } from \"../../service/api\";\r\nimport { DataContext } from \"../../context/DataProvider\";\r\n\r\n// components\r\nimport Comments from \"./comments/Comments\";\r\n\r\nconst Container = styled(Box)(({ theme }) => ({\r\n  margin: \"50px 100px\",\r\n  padding: \"20px\",\r\n  background: \"#fff\",\r\n  borderRadius: \"10px\",\r\n  boxShadow: \"0px 4px 20px rgba(0, 0, 0, 0.1)\",\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    margin: \"20px\",\r\n  },\r\n}));\r\n\r\nconst Image = styled(\"img\")({\r\n  width: \"100%\",\r\n  height: \"50vh\",\r\n  objectFit: \"cover\",\r\n  borderRadius: \"10px\",\r\n  marginBottom: \"20px\",\r\n});\r\n\r\nconst EditIcon = styled(Edit)`\r\n  margin: 5px;\r\n  padding: 10px;\r\n  border: 1px solid #1976d2;\r\n  border-radius: 50%;\r\n  background-color: #e3f2fd;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  &:hover {\r\n    background-color: #1976d2;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst DeleteIcon = styled(Delete)`\r\n  margin: 5px;\r\n  padding: 10px;\r\n  border: 1px solid #d32f2f;\r\n  border-radius: 50%;\r\n  background-color: #ffebee;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  &:hover {\r\n    background-color: #d32f2f;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst Heading = styled(Typography)`\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n  text-align: center;\r\n  margin: 20px 0 10px 0;\r\n  color: #333;\r\n`;\r\n\r\nconst Author = styled(Box)(({ theme }) => ({\r\n  color: \"#555\",\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  fontSize: \"14px\",\r\n  marginBottom: \"20px\",\r\n  [theme.breakpoints.down(\"sm\")]: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    gap: \"10px\",\r\n  },\r\n}));\r\n\r\nconst Description = styled(Typography)`\r\n  font-size: 18px;\r\n  color: #444;\r\n  line-height: 1.8;\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst DetailView = () => {\r\n  const url =\r\n    \"https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80\";\r\n\r\n  const [post, setPost] = useState({});\r\n  const { account } = useContext(DataContext);\r\n\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let response = await API.getPostById(id);\r\n      if (response.isSuccess) {\r\n        setPost(response.data);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  const deleteBlog = async () => {\r\n    await API.deletePost(post._id);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Image src={post.picture || url} alt=\"post\" />\r\n      <Box style={{ textAlign: \"right\" }}>\r\n        {account.username === post.username && (\r\n          <>\r\n            <Link to={`/update/${post._id}`}>\r\n              <EditIcon />\r\n            </Link>\r\n            <DeleteIcon onClick={() => deleteBlog()} />\r\n          </>\r\n        )}\r\n      </Box>\r\n      <Heading>{post.title}</Heading>\r\n      <Author>\r\n        <Link\r\n          to={`/?username=${post.username}`}\r\n          style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n        >\r\n          <Typography>\r\n            Author: <span style={{ fontWeight: 600 }}>{post.username}</span>\r\n          </Typography>\r\n        </Link>\r\n        <Typography>{new Date(post.createdDate).toDateString()}</Typography>\r\n      </Author>\r\n      <Description>{post.description}</Description>\r\n      <Comments post={post} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DetailView;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Box, styled, TextareaAutosize, Button, FormControl, InputBase } from '@mui/material';\r\nimport { AddCircle as Add } from '@mui/icons-material';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nimport { API } from '../../service/api';\r\n\r\nconst Container = styled(Box)(({ theme }) => ({\r\n    margin: '50px 100px',\r\n    [theme.breakpoints.down('md')]: {\r\n        margin: 0\r\n    }\r\n}));\r\n\r\nconst Image = styled('img')({\r\n    width: '100%',\r\n    height: '50vh',\r\n    objectFit: 'cover'\r\n});\r\n\r\nconst StyledFormControl = styled(FormControl)`\r\n    margin-top: 10px;\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\n\r\nconst InputTextField = styled(InputBase)`\r\n    flex: 1;\r\n    margin: 0 30px;\r\n    font-size: 25px;\r\n`;\r\n\r\nconst StyledTextArea = styled(TextareaAutosize)`\r\n    width: 100%;\r\n    border: none;\r\n    margin-top: 50px;\r\n    font-size: 18px;\r\n    &:focus-visible {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst initialPost = {\r\n    title: '',\r\n    description: '',\r\n    picture: '',\r\n    username: 'codeforinterview',\r\n    categories: 'Tech',\r\n    createdDate: new Date()\r\n}\r\n\r\nconst Update = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [post, setPost] = useState(initialPost);\r\n    const [file, setFile] = useState('');\r\n    const [imageURL, setImageURL] = useState('');\r\n\r\n    const { id } = useParams();\r\n\r\n    const url = 'https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80';\r\n    \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let response = await API.getPostById(id);\r\n            if (response.isSuccess) {\r\n                setPost(response.data);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getImage = async () => { \r\n            if(file) {\r\n                const data = new FormData();\r\n                data.append(\"name\", file.name);\r\n                data.append(\"file\", file);\r\n                \r\n                const response = await API.uploadFile(data);\r\n                if (response.isSuccess) {\r\n                    post.picture = response.data;\r\n                    setImageURL(response.data);    \r\n                }\r\n            }\r\n        }\r\n        getImage();\r\n    }, [file])\r\n\r\n    const updateBlogPost = async () => {\r\n        await API.updatePost(post);\r\n        navigate(`/details/${id}`);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setPost({ ...post, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Image src={post.picture || url} alt=\"post\" />\r\n\r\n            <StyledFormControl>\r\n                <label htmlFor=\"fileInput\">\r\n                    <Add fontSize=\"large\" color=\"action\" />\r\n                </label>\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"fileInput\"\r\n                    style={{ display: \"none\" }}\r\n                    onChange={(e) => setFile(e.target.files[0])}\r\n                />\r\n                <InputTextField onChange={(e) => handleChange(e)} value={post.title} name='title' placeholder=\"Title\" />\r\n                <Button onClick={() => updateBlogPost()} variant=\"contained\" color=\"primary\">Update</Button>\r\n            </StyledFormControl>\r\n\r\n            <StyledTextArea\r\n                rowsMin={5}\r\n                placeholder=\"Tell your story...\"\r\n                name='description'\r\n                onChange={(e) => handleChange(e)} \r\n                value={post.description}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Update;","import { Box, styled, Typography, Link } from \"@mui/material\";\r\nimport { GitHub, Instagram, Email } from \"@mui/icons-material\";\r\n\r\nconst Banner = styled(Box)`\r\n  background-image: url(https://www.wallpapertip.com/wmimgs/23-236943_us-wallpaper-for-website.jpg);\r\n  width: 100%;\r\n  height: 50vh;\r\n  background-position: left 0px bottom 0px;\r\n  background-size: cover;\r\n`;\r\n\r\nconst Wrapper = styled(Box)`\r\n  padding: 20px;\r\n  & > h3,\r\n  & > h5 {\r\n    margin-top: 50px;\r\n  }\r\n`;\r\n\r\nconst Text = styled(Typography)`\r\n  color: #878787;\r\n`;\r\n\r\nconst About = () => {\r\n  return (\r\n    <Box>\r\n      <Banner />\r\n      <Wrapper>\r\n        <Typography variant=\"h3\">MERN BLOG APP</Typography>\r\n\r\n        <Box component=\"span\" style={{ marginLeft: 5 }}>\r\n          <Link\r\n            href=\"https://github.com/sobannadeem1\"\r\n            color=\"inherit\"\r\n            target=\"_blank\"\r\n          >\r\n            <GitHub />\r\n          </Link>\r\n        </Box>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { Box, styled, Typography, Link } from \"@mui/material\";\r\nimport { GitHub, Instagram, Email } from \"@mui/icons-material\";\r\n\r\nconst Banner = styled(Box)`\r\n  background-image: url(http://mrtaba.ir/image/bg2.jpg);\r\n  width: 100%;\r\n  height: 50vh;\r\n  background-position: left 0px top -100px;\r\n  background-size: cover;\r\n`;\r\n\r\nconst Wrapper = styled(Box)`\r\n  padding: 20px;\r\n  & > h3,\r\n  & > h5 {\r\n    margin-top: 50px;\r\n  }\r\n`;\r\n\r\nconst Text = styled(Typography)`\r\n  color: #878787;\r\n`;\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <Box>\r\n      <Banner />\r\n      <Wrapper>\r\n        <Typography variant=\"h3\">Getting in touch is easy!</Typography>\r\n        <Text variant=\"h5\">\r\n          send me an Email\r\n          <Link\r\n            href=\"mailto:soban312004@gmail.com?Subject=This is a subject\"\r\n            target=\"_blank\"\r\n            color=\"inherit\"\r\n          >\r\n            <Email />\r\n          </Link>\r\n          .\r\n        </Text>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { TextField, Box, Button, Typography, styled } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { API } from \"../../service/api\";\r\nimport { DataContext } from \"../../context/DataProvider\";\r\n\r\nconst Component = styled(Box)`\r\n  width: 400px;\r\n  margin: 100px auto;\r\n  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  background: #f9f9f9;\r\n`;\r\n\r\nconst Image = styled(\"img\")({\r\n  width: 80,\r\n  display: \"flex\",\r\n  margin: \"30px auto 0\",\r\n});\r\n\r\nconst Wrapper = styled(Box)`\r\n  padding: 25px 35px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 20px;\r\n  background: #fff;\r\n\r\n  & > div {\r\n    width: 100%;\r\n  }\r\n\r\n  & > button {\r\n    width: 100%;\r\n    padding: 10px;\r\n  }\r\n\r\n  & > p {\r\n    margin-top: 20px;\r\n    color: #666;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst LoginButton = styled(Button)`\r\n  text-transform: none;\r\n  background: linear-gradient(90deg, #ff7a18, #ff2e63);\r\n  color: #fff;\r\n  border-radius: 25px;\r\n  font-weight: bold;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: scale(1.02);\r\n    box-shadow: 0px 8px 15px rgba(255, 46, 99, 0.3);\r\n    background: linear-gradient(90deg, #ff2e63, #ff7a18);\r\n  }\r\n`;\r\n\r\nconst SignupButton = styled(Button)`\r\n  text-transform: none;\r\n  color: #ff2e63;\r\n  background: #f9f9f9;\r\n  border: 1px solid #ff2e63;\r\n  border-radius: 25px;\r\n  font-weight: bold;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: scale(1.02);\r\n    box-shadow: 0px 8px 15px rgba(255, 46, 99, 0.2);\r\n  }\r\n`;\r\n\r\nconst Text = styled(Typography)`\r\n  font-size: 12px;\r\n  color: #666;\r\n`;\r\n\r\nconst Error = styled(Typography)`\r\n  font-size: 14px;\r\n  color: #ff4d4d;\r\n  font-weight: 600;\r\n  text-align: center;\r\n`;\r\n\r\nconst loginInitialValues = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst signupInitialValues = {\r\n  name: \"\",\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst Login = ({ isUserAuthenticated }) => {\r\n  const [login, setLogin] = useState(loginInitialValues);\r\n  const [signup, setSignup] = useState(signupInitialValues);\r\n  const [error, showError] = useState(\"\");\r\n  const [account, toggleAccount] = useState(\"login\");\r\n\r\n  const navigate = useNavigate();\r\n  const { setAccount } = useContext(DataContext);\r\n\r\n  const imageURL =\r\n    \"https://www.sesta.it/wp-content/uploads/2021/03/logo-blog-sesta-trasparente.png\";\r\n\r\n  // Check for existing token on mount\r\n  useEffect(() => {\r\n    const token = sessionStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      isUserAuthenticated(true);\r\n      navigate(\"/\"); // Redirect if token exists\r\n    }\r\n  }, [isUserAuthenticated, navigate]);\r\n\r\n  // Handle input changes for login\r\n  const onValueChange = (e) => {\r\n    setLogin({ ...login, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle input changes for signup\r\n  const onInputChange = (e) => {\r\n    setSignup({ ...signup, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Login User\r\n  const loginUser = async () => {\r\n    if (!login.username || !login.password) {\r\n      showError(\"Both username and password are required!\");\r\n      return;\r\n    }\r\n    const response = await API.userLogin(login);\r\n    if (response.isSuccess) {\r\n      showError(\"\");\r\n      sessionStorage.setItem(\r\n        \"accessToken\",\r\n        `Bearer ${response.data.accessToken}`\r\n      );\r\n      sessionStorage.setItem(\r\n        \"refreshToken\",\r\n        `Bearer ${response.data.refreshToken}`\r\n      );\r\n      setAccount({\r\n        name: response.data.name,\r\n        username: response.data.username,\r\n      });\r\n      isUserAuthenticated(true);\r\n      navigate(\"/\");\r\n    } else {\r\n      showError(\"Invalid username or password!\");\r\n    }\r\n  };\r\n\r\n  // Signup User\r\n  const signupUser = async () => {\r\n    if (!signup.name || !signup.username || !signup.password) {\r\n      showError(\"All fields are required!\");\r\n      return;\r\n    }\r\n    const response = await API.userSignup(signup);\r\n    if (response.isSuccess) {\r\n      showError(\"\");\r\n      setSignup(signupInitialValues);\r\n      toggleAccount(\"login\");\r\n    } else {\r\n      showError(\"Signup failed! Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Toggle between login and signup forms\r\n  const toggleSignup = () => {\r\n    toggleAccount(account === \"signup\" ? \"login\" : \"signup\");\r\n    showError(\"\"); // Clear error when toggling\r\n  };\r\n\r\n  return (\r\n    <Component>\r\n      <Box>\r\n        <Image src={imageURL} alt=\"blog\" />\r\n        {account === \"login\" ? (\r\n          <Wrapper>\r\n            <TextField\r\n              variant=\"standard\"\r\n              value={login.username}\r\n              onChange={onValueChange}\r\n              name=\"username\"\r\n              label=\"Enter Username\"\r\n            />\r\n            <TextField\r\n              variant=\"standard\"\r\n              value={login.password}\r\n              onChange={onValueChange}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Enter Password\"\r\n            />\r\n            {error && <Error>{error}</Error>}\r\n            <LoginButton variant=\"contained\" onClick={loginUser}>\r\n              Login\r\n            </LoginButton>\r\n            <Text style={{ textAlign: \"center\" }}>OR</Text>\r\n            <SignupButton onClick={toggleSignup}>\r\n              Create an account\r\n            </SignupButton>\r\n          </Wrapper>\r\n        ) : (\r\n          <Wrapper>\r\n            <TextField\r\n              variant=\"standard\"\r\n              onChange={onInputChange}\r\n              name=\"name\"\r\n              label=\"Enter Name\"\r\n            />\r\n            <TextField\r\n              variant=\"standard\"\r\n              onChange={onInputChange}\r\n              name=\"username\"\r\n              label=\"Enter Username\"\r\n            />\r\n            <TextField\r\n              variant=\"standard\"\r\n              onChange={onInputChange}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Enter Password\"\r\n            />\r\n            {error && <Error>{error}</Error>}\r\n            <SignupButton onClick={signupUser}>Signup</SignupButton>\r\n            <Text style={{ textAlign: \"center\" }}>OR</Text>\r\n            <LoginButton variant=\"contained\" onClick={toggleSignup}>\r\n              Already have an account\r\n            </LoginButton>\r\n          </Wrapper>\r\n        )}\r\n      </Box>\r\n    </Component>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState } from 'react';\r\n\r\nimport { Box } from '@mui/material';\r\nimport { BrowserRouter, Routes, Route, Navigate, Outlet } from 'react-router-dom';\r\n\r\n//components\r\nimport DataProvider from './context/DataProvider';\r\nimport Header from './components/header/Header';\r\nimport Home from './components/home/Home';\r\nimport CreatePost from './components/create/CreatePost';\r\nimport DetailView from './components/details/DetailView';\r\nimport Update from './components/create/Update';\r\nimport About from './components/about/About';\r\nimport Contact from './components/contact/Contact';\r\nimport Login from './components/account/Login';\r\n\r\nconst PrivateRoute = ({ isAuthenticated, ...props }) => {\r\n  const token = sessionStorage.getItem('accessToken');\r\n  return isAuthenticated && token ? \r\n    <>\r\n      <Header />\r\n      <Outlet />\r\n    </> : <Navigate replace to='/account' />\r\n};\r\n\r\nfunction App() {\r\n\r\n  const [isAuthenticated, isUserAuthenticated] = useState(false);\r\n\r\n  return (\r\n    <DataProvider>\r\n      <BrowserRouter>\r\n        <Box style={{ marginTop: 64 }}>\r\n          <Routes>\r\n            <Route path='/account' element={<Login isUserAuthenticated={isUserAuthenticated} />} />\r\n            \r\n            <Route path='/' element={<PrivateRoute isAuthenticated={isAuthenticated} />} >\r\n              <Route path='/' element={<Home />} />\r\n            </Route>\r\n\r\n            <Route path='/create' element={<PrivateRoute isAuthenticated={isAuthenticated} />} >\r\n              <Route path='/create' element={<CreatePost />} />\r\n            </Route>\r\n\r\n            <Route path='/details/:id' element={<PrivateRoute isAuthenticated={isAuthenticated} />} >\r\n              <Route path='/details/:id' element={<DetailView />} />\r\n            </Route>\r\n\r\n            <Route path='/update/:id' element={<PrivateRoute isAuthenticated={isAuthenticated} />} >\r\n              <Route path='/update/:id' element={<Update />} />\r\n            </Route>\r\n\r\n            <Route path='/about' element={<PrivateRoute isAuthenticated={isAuthenticated} />} >\r\n              <Route path='/about' element={<About />} />\r\n            </Route>\r\n\r\n            <Route path='/contact' element={<PrivateRoute isAuthenticated={isAuthenticated} />} >\r\n              <Route path='/contact' element={<Contact />} />\r\n            </Route>\r\n          </Routes>\r\n        </Box>\r\n      </BrowserRouter>\r\n    </DataProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}